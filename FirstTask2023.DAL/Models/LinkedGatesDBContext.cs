// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;

namespace FirstTask2023.DAL.Models
{
    public partial class LinkedGatesDBContext : DbContext
    {
        public LinkedGatesDBContext()
        {
            ChangeTracker.LazyLoadingEnabled = false;
        }

        public LinkedGatesDBContext(DbContextOptions<LinkedGatesDBContext> options)
            : base(options)
        {
        }

        public virtual DbSet<BrandTBL> BrandTBL { get; set; }
        public virtual DbSet<DeviceCategoryTBL> DeviceCategoryTBL { get; set; }
        public virtual DbSet<DevicePropertyDetailTBL> DevicePropertyDetailTBL { get; set; }
        public virtual DbSet<DevicePropertyTBL> DevicePropertyTBL { get; set; }
        public virtual DbSet<DeviceTBL> DeviceTBL { get; set; }
        public virtual DbSet<PropertiesTBL> PropertiesTBL { get; set; }
        public virtual DbSet<UserTBL> UserTBL { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<DevicePropertyDetailTBL>(entity =>
            {
                entity.HasOne(d => d.Device)
                    .WithMany(p => p.DevicePropertyDetailTBL)
                    .HasForeignKey(d => d.DeviceId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_DevicePropertyDetailTBL_DeviceTBL");

                entity.HasOne(d => d.Property)
                    .WithMany(p => p.DevicePropertyDetailTBL)
                    .HasForeignKey(d => d.PropertyId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_DevicePropertyDetailTBL_PropertiesTBL");
            });

            modelBuilder.Entity<DevicePropertyTBL>(entity =>
            {
                entity.HasOne(d => d.DeviceCategory)
                    .WithMany(p => p.DevicePropertyTBL)
                    .HasForeignKey(d => d.DeviceCategoryId)
                    .HasConstraintName("FK_DevicePropertyTBL_DeviceCategoryTBL");

                entity.HasOne(d => d.Property)
                    .WithMany(p => p.DevicePropertyTBL)
                    .HasForeignKey(d => d.PropertyId)
                    .HasConstraintName("FK_DevicePropertyTBL_PropertiesTBL");
            });

            modelBuilder.Entity<DeviceTBL>(entity =>
            {
                entity.HasOne(d => d.Brand)
                    .WithMany(p => p.DeviceTBL)
                    .HasForeignKey(d => d.BrandId)
                    .HasConstraintName("FK_DeviceTBL_BrandTBL");

                entity.HasOne(d => d.CurrentUser)
                    .WithMany(p => p.DeviceTBL)
                    .HasForeignKey(d => d.CurrentUserId)
                    .HasConstraintName("FK_DeviceTBL_UserTBL1");

                entity.HasOne(d => d.DeviceCategory)
                    .WithMany(p => p.DeviceTBL)
                    .HasForeignKey(d => d.DeviceCategoryId)
                    .HasConstraintName("FK_DeviceTBL_DeviceCategoryTBL");
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}